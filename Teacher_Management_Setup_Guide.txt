
📘 SPRING BOOT + POSTGRESQL + THYMELEAF PROJECT SETUP GUIDE
============================================================

👤 Project: Teacher Management System
💻 Author: Jay Sharma
📅 Year: 2025

------------------------------------------------------------
🧩 1. Project Structure (Important)
------------------------------------------------------------

teacher-management/
│
├── pom.xml
├── src/
│   └── main/
│       ├── java/com/example/teacher/
│       │   ├── TeacherManagementApplication.java
│       │   ├── model/
│       │   │   └── Teacher.java
│       │   ├── repository/
│       │   │   └── TeacherRepository.java
│       │   ├── service/
│       │   │   └── TeacherService.java
│       │   └── controller/
│       │       └── TeacherController.java
│       └── resources/
│           ├── templates/
│           │   ├── index.html
│           │   ├── add-teacher.html
│           │   └── list-teachers.html
│           ├── static/
│           │   └── css/
│           │        └── style.css
│           └── application.properties

------------------------------------------------------------
⚙️ 2. PostgreSQL Setup
------------------------------------------------------------

1. Open pgAdmin 4
2. Start PostgreSQL service
3. Create a new database with the name:
   👉 "Jay_db"

4. Create a user (if not already created):
   ```sql
   CREATE ROLE "Jay_Sharma" WITH LOGIN PASSWORD '12345678';
   ALTER ROLE "Jay_Sharma" CREATEDB;
   GRANT ALL PRIVILEGES ON DATABASE "Jay_db" TO "Jay_Sharma";
   ```

------------------------------------------------------------
🔗 3. Configure Database Connection
------------------------------------------------------------

In `src/main/resources/application.properties`:

```properties
spring.datasource.url=jdbc:postgresql://localhost:5432/"Jay_db"
spring.datasource.username=Jay_Sharma
spring.datasource.password=12345678

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.thymeleaf.cache=false
server.port=8080
```

------------------------------------------------------------
🧱 4. Dependencies in pom.xml
------------------------------------------------------------

Add these inside the `<dependencies>` tag:

```xml
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-web</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-thymeleaf</artifactId>
</dependency>
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>
<dependency>
    <groupId>org.postgresql</groupId>
    <artifactId>postgresql</artifactId>
    <scope>runtime</scope>
</dependency>
```

Then click **“Load Maven Changes”** in IntelliJ.

------------------------------------------------------------
🏗️ 5. Run the Project in IntelliJ
------------------------------------------------------------

1. Open the project in IntelliJ IDEA.
2. Right-click the main file:
   `TeacherManagementApplication.java`
3. Choose **Run 'TeacherManagementApplication'**.
4. Wait for the console message:
   ```
   Tomcat started on port 8080
   Started TeacherManagementApplication
   ```

------------------------------------------------------------
🌐 6. Access the Web Pages
------------------------------------------------------------

✅ **Home Page:**  
👉 http://localhost:8080/teachers/

✅ **Add New Teacher:**  
👉 http://localhost:8080/teachers/add

✅ **List All Teachers:**  
👉 http://localhost:8080/teachers/list

------------------------------------------------------------
🧮 7. Verify Data in Database
------------------------------------------------------------

1. Open pgAdmin
2. Expand:
   `Jay_db → Schemas → public → Tables → teachers`
3. Right-click **teachers → View/Edit Data → All Rows**

You will see all the teachers added from the website.

------------------------------------------------------------
🎨 8. Styling Setup
------------------------------------------------------------

File path:  
`src/main/resources/static/css/style.css`

Make sure your HTML files include:
```html
<link rel="stylesheet" th:href="@{/css/style.css}">
```

This applies the dark-glass neon theme to all pages.

------------------------------------------------------------
🚀 9. Restart & Run
------------------------------------------------------------

- Stop the app if running (🟥 button in IntelliJ)
- Click **Run ▶️**
- Visit `http://localhost:8080/teachers/`
- Add a new teacher and verify it appears in pgAdmin.

------------------------------------------------------------
✅ Congratulations!
------------------------------------------------------------

Your **Teacher Management System** using **Spring Boot + PostgreSQL + Thymeleaf** is now fully working and styled.

💡 Designed by Jay Sharma (2025)
